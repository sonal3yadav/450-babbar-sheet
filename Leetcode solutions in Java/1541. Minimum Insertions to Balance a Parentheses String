https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/description/ 

class Solution {
    public int minInsertions(String s)
{
       Stack<Character> stk=new Stack<>();
        int ans=0;
        for(int i=0;i<s.length();){
            char a=s.charAt(i);
            if(a=='('){
                stk.push('(');
            }
            else{
               if(stk.isEmpty()){
                   if(i+1<s.length() && s.charAt(i)==s.charAt(i+1)){
                       ans=ans+1;
                       i++;
                   }
                   else if(i+1<s.length() && s.charAt(i)!=s.charAt(i+1)){
                       ans=ans+2;
                   }
                   else if(i+1==s.length()){
                       ans=ans+2;
                   }
               }
                else{
                     if(i+1<s.length() && s.charAt(i)==s.charAt(i+1)){
                       stk.pop();
                       i++;
                   }
                     else if(i+1<s.length() && s.charAt(i)!=s.charAt(i+1)){
                       ans=ans+1;
                         stk.pop();
                   }
                    else if(i+1==s.length()){
                        ans=ans+1;
                        stk.pop();
                    }
                }
            }
            i++;
        }
        if(stk.size()!=0){
            ans=ans+(stk.size()*2);
        }
        return ans;
    }
}
